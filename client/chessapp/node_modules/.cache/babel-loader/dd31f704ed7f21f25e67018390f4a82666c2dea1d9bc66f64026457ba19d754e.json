{"ast":null,"code":"// import React, { useEffect } from 'react';\n\n// const GameBoard = ({ gameState, websocket }) => {\n\n//     useEffect(() => {\n//         console.log(\"Current game state grid:\", gameState.grid);\n//     }, [gameState]);\n\n//     const handleClick = (row, col) => {\n//         const moveCommand = prompt(\"Enter move command (e.g., FR, BL)\");\n//         if (moveCommand) {\n//             const message = JSON.stringify({\n//                 type: 'move',\n//                 player: gameState.currentPlayer,\n//                 character: `P:${moveCommand}`,\n//                 move: moveCommand\n//             });\n//             websocket.send(message);\n//         }\n//     };\n\n//     return (\n//         <div style={{ display: 'grid', gridTemplateColumns: `repeat(${5}, 50px)` }}>\n//             {gameState.grid.map((row, rowIndex) =>\n//                 row.map((cell, colIndex) => (\n//                     <div\n//                         key={`${rowIndex}-${colIndex}`}\n//                         onClick={() => handleClick(rowIndex, colIndex)}\n//                         style={{\n//                             width: '50px',\n//                             height: '50px',\n//                             border: '1px solid black',\n//                             backgroundColor: (rowIndex + colIndex) % 2 === 0 ? 'white' : 'gray',\n//                             display: 'flex',\n//                             alignItems: 'center',\n//                             justifyContent: 'center',\n//                             fontSize: '18px',\n//                             fontWeight: 'bold'\n//                         }}\n//                     >\n//                         {cell ? cell : \"\"}\n//                     </div>\n//                 ))\n//             )}\n//         </div>\n//     );\n// };\n\n// export default GameBoard;","map":{"version":3,"names":[],"sources":["/Users/leerisharvind/Documents/HitWicket_Submission/client/chessapp/src/GameBoard.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n\n// const GameBoard = ({ gameState, websocket }) => {\n\n//     useEffect(() => {\n//         console.log(\"Current game state grid:\", gameState.grid);\n//     }, [gameState]);\n\n//     const handleClick = (row, col) => {\n//         const moveCommand = prompt(\"Enter move command (e.g., FR, BL)\");\n//         if (moveCommand) {\n//             const message = JSON.stringify({\n//                 type: 'move',\n//                 player: gameState.currentPlayer,\n//                 character: `P:${moveCommand}`,\n//                 move: moveCommand\n//             });\n//             websocket.send(message);\n//         }\n//     };\n\n//     return (\n//         <div style={{ display: 'grid', gridTemplateColumns: `repeat(${5}, 50px)` }}>\n//             {gameState.grid.map((row, rowIndex) =>\n//                 row.map((cell, colIndex) => (\n//                     <div\n//                         key={`${rowIndex}-${colIndex}`}\n//                         onClick={() => handleClick(rowIndex, colIndex)}\n//                         style={{\n//                             width: '50px',\n//                             height: '50px',\n//                             border: '1px solid black',\n//                             backgroundColor: (rowIndex + colIndex) % 2 === 0 ? 'white' : 'gray',\n//                             display: 'flex',\n//                             alignItems: 'center',\n//                             justifyContent: 'center',\n//                             fontSize: '18px',\n//                             fontWeight: 'bold'\n//                         }}\n//                     >\n//                         {cell ? cell : \"\"}\n//                     </div>\n//                 ))\n//             )}\n//         </div>\n//     );\n// };\n\n// export default GameBoard;\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}