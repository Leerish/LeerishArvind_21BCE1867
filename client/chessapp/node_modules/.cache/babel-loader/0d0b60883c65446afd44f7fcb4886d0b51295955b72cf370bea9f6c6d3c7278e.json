{"ast":null,"code":"var _jsxFileName = \"/Users/leerisharvind/Documents/HitWicket_Submission/client/chessapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameBoard from './GameBoard';\nimport Chat from './Chat';\nimport { connectWebSocket } from './websocket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialGameState = {\n  board: [[null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null], [null, null, null, null, null]],\n  players: {\n    A: {\n      pieces: [{\n        id: 'P1',\n        type: 'Pawn',\n        position: [0, 0]\n      }, {\n        id: 'H1',\n        type: 'Hero1',\n        position: [0, 1]\n      }]\n    },\n    B: {\n      pieces: [{\n        id: 'P1',\n        type: 'Pawn',\n        position: [4, 0]\n      }, {\n        id: 'H1',\n        type: 'Hero1',\n        position: [4, 1]\n      }\n      // Add other pieces for Player B\n      ]\n    }\n  },\n  currentPlayer: 'A',\n  moveHistory: []\n};\nconst App = () => {\n  _s();\n  const [gameState, setGameState] = useState(initialGameState);\n  const [websocket, setWebSocket] = useState(null);\n  useEffect(() => {\n    const ws = connectWebSocket(message => {\n      const data = JSON.parse(message.data);\n      if (data.type === 'gameState') {\n        setGameState(data.state);\n      }\n    });\n    setWebSocket(ws);\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess-like Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), gameState && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n        gameState: gameState,\n        websocket: websocket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        websocket: websocket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"l5z5bqYT13LLYvSl2sXVodbIr1A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameBoard","Chat","connectWebSocket","jsxDEV","_jsxDEV","Fragment","_Fragment","initialGameState","board","players","A","pieces","id","type","position","B","currentPlayer","moveHistory","App","_s","gameState","setGameState","websocket","setWebSocket","ws","message","data","JSON","parse","state","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leerisharvind/Documents/HitWicket_Submission/client/chessapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GameBoard from './GameBoard';\nimport Chat from './Chat';\nimport { connectWebSocket } from './websocket';\n\nconst initialGameState = {\n  board: [\n    [null, null, null, null, null],\n    [null, null, null, null, null],\n    [null, null, null, null, null],\n    [null, null, null, null, null],\n    [null, null, null, null, null],\n  ],\n  players: {\n    A: {\n      pieces: [\n        { id: 'P1', type: 'Pawn', position: [0, 0] },\n        { id: 'H1', type: 'Hero1', position: [0, 1] },\n        \n      ],\n    },\n    B: {\n      pieces: [\n        { id: 'P1', type: 'Pawn', position: [4, 0] },\n        { id: 'H1', type: 'Hero1', position: [4, 1] },\n        // Add other pieces for Player B\n      ],\n    },\n  },\n  currentPlayer: 'A',\n  moveHistory: [],\n};\n\n\nconst App = () => {\n    const [gameState, setGameState] = useState(initialGameState);\n\n    const [websocket, setWebSocket] = useState(null);\n\n    useEffect(() => {\n        const ws = connectWebSocket((message) => {\n            const data = JSON.parse(message.data);\n            if (data.type === 'gameState') {\n                setGameState(data.state);\n            }\n        });\n        setWebSocket(ws);\n\n        return () => {\n            ws.close();\n        };\n    }, []);\n\n    return (\n        <div>\n            <h1>Chess-like Game</h1>\n            {gameState && (\n                <>\n                    <GameBoard gameState={gameState} websocket={websocket} />\n                    <Chat websocket={websocket} />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}